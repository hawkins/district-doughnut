Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code: target/lambda/release/bootstrap.zip
      Handler: main.main
      Runtime: provided
      MemorySize: 128
      Timeout: 5
      Role: !GetAtt ExecutionRole.Arn
      Environment:
        Variables:
          RUST_BACKTRACE: 1
          TOPIC_ARN: !Ref Topic
          TABLE_NAME: !Ref Table

  LogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: Function
    Properties:
      RetentionInDays: 14
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref Function]]

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: flavor
          AttributeType: S
      KeySchema:
        - AttributeName: flavor
          KeyType: HASH
      TableName: !Ref TableName
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TablePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ExecutionRole
      PolicyName: table-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:DeleteItem
          Resource: !GetAtt Table.Arn

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Protocol: sms
          Endpoint: !Ref PhoneNumber

  TopicPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ExecutionRole
      PolicyName: topic-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - sns:Publish
          Resource: !Ref Topic

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 day)
      Targets:
        - Id: Scheduler
          Arn: !GetAtt Function.Arn

  EventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Function.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventRule.Arn

Parameters:
  TableName:
    Type: String
    Description: "DynamoDB table name in which the function will store the menu"
    MinLength: 1
    MaxLength: 255
  PhoneNumber:
    Type: String
    Description: "SMS number with country code to subscribe"
    MinLength: 1
    MaxLength: 15
